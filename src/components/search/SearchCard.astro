---
import "../../global.js";
import StarsIcon from "../../icons/Stars.astro";

interface Props {
    extension: {
        name: string;
        description: string;
        author: string;
        date: string;
        rating: string;
        downloads: string;
        shellSupport: string[];
    };
}

const { extension } = Astro.props;
---

<article>
    <a href="/extension" class="icon"><div></div></a>
    <span class="body">
        <a href="/extension">
            <header>
                <span class="headline">
                    <h4>{extension.name}</h4>
                    <span class="rating">
                        {extension.rating}
                        <StarsIcon
                            class="star-icon"
                            aria-hidden="true"
                            size="12"
                        /></span
                    >
                </span>
            </header>
        </a>
        <p class="author">
            by <a href="/extension">{extension.author}</a> â€¢ {extension.date}
        </p>
        <p class="description">{extension.description}</p>
        <div class="support-list">
            <span>Supports GNOME</span>
            <span class="supported-versions">
                {
                    extension.shellSupport.map((version) => (
                        <span class="version-pill">{version}</span>
                    ))
                }
            </span>
        </div>
    </span>
    <span class="action-buttons">
        <button
            type="button"
            onclick="alert('Not implemented since this is just concept')"
            >Activate</button
        >
        <button
            type="button"
            onclick="alert('Not implemented since this is just concept')"
            >Preferences</button
        >
        <button
            type="button"
            onclick="alert('Not implemented since this is just concept')"
            >Uninstall</button
        >
    </span>
</article>

<style>
    article {
        display: flex;
        align-items: center;
        gap: 2rem;
        padding-block: 2rem;
        padding-inline: 0.5rem;

        &:not(:last-child) {
            border-block-end: 1px solid #ddd;
        }
    }

    article .icon {
        display: none;
    }

    article .icon {
        align-items: center;
        justify-content: center;
        inline-size: 5rem;
        block-size: 5rem;
        background-color: var(--primary-color-light);
        border-radius: 1rem;

        div {
            inline-size: 3rem;
            block-size: 3rem;
            background-color: var(--primary-color);
            border-radius: 0.5rem;
        }
    }

    article a:has(.headline) {
        text-decoration: none;
        color: inherit;
    }

    article .headline {
        display: flex;
        align-items: center;
        gap: 1rem;

        h4 {
            font-size: 1rem;
            font-color: inherit;
            margin-block: 0;
        }

        .rating {
            display: flex;
            align-items: center;
            gap: 0.25rem;
        }

        .star-icon {
            fill: #fda002;
        }

        svg {
            margin-inline-start: 0.25rem;
        }

        span {
            font-size: smaller;
        }
    }

    article a:has(.headline):hover,
    article a.icon:hover + .body .headline {
        color: var(--primary-color-text);
    }

    article .body {
        display: flex;
        flex-direction: column;
        flex: 1 0 0;
        gap: 0.5rem;
    }

    article .author {
        color: var(--text-color-dim);
        font-size: smaller;
    }

    article .description {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        font-size: smaller;
    }

    article .support-list {
        display: flex;
        font-size: small;
        gap: 1.5rem;
        color: var(--text-color-dim);
    }

    article .support-list .supported-versions {
        display: inline-flex;
        gap: 0.5rem;
    }

    article .support-list .version-pill {
        color: var(--text-color);
        background-color: #ccc;
        padding-inline: 0.5rem;
        border-radius: calc(infinity * 1px);
    }

    article .action-buttons {
        display: none;
    }

    @media (min-width: 40rem) {
        article .icon {
            display: flex;
        }
    }

    @media (min-width: 80rem) {
        article .action-buttons {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;

            button {
                background-color: #ddd;
                border: none;
                border-radius: 0.5rem;
                padding: 0.5rem 1.25rem;
                font-size: smaller;
                font-weight: 600;
            }

            button:last-child {
                background-color: #d73c24;
                color: white;
            }
        }
    }
</style>
